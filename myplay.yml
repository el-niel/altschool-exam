---
- name: Web server set up
  hosts: all
  remote_user: ubuntu
  become: true
  become_method: sudo

  tasks:
    - name: Update and upgrade
      apt:
        update_cache: true
        upgrade: true
    - name: Installing python3-pip and others
      apt:
        name:
          - python3-pip
          - git
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
          - debconf-utils
          - libaio1

    - name: Install PyMySQL
      shell: python3 -m pip install PyMySQL

    - name: Install Cryptography
      shell: pip install cryptography

    - name: Install Apache
      apt:
        name: apache2, apache2-utils

    - name: Adding PHP repo
      apt_repository:
        repo: ppa:ondrej/php

    - name: Installing PHP and dependecies
      apt:
        name: php8.1, libapache2-mod-php8.1, php8.1-cli, php8.1-common, php8.1-mysql, php8.1-opcache, php>

    - name: Mysql
      shell: debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password root"
        "mysql-community-server mysql-community-server/re-root-pass password root"
        EOF

    - name: Mysql apt config
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/>

    - name: Mysql Apt config
      shell: sudo DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/nu>

    - name: Update and upgrade
      apt:
        update_cache: true
        upgrade: true

    - name: Installing Mysql
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --forc>

    - name: Mysql
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE DATABASE daniel;

    - name: Creating Database
      shell: 'mysql -ne "{{ item }}"'
      with_items:
    - CREATE USER 'daniel'@'localhost' IDENTIFIED BY 'daniel';

    - name: Granting privileges
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON daniel.* TO 'daniel'@'localhost';

    - name: mysql setup
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES;

    #- name: Clone from git
    # shell: git clone https://github.com/f1amy/laravel-realworld-example-app.git /var/www/danielapp

    - name: .env setup
      copy:
        dest: /var/www/danielapp/.env
        content: |
          APP_NAME="daniel"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://localhost
          APP_PORT=3000
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=daniel
          DB_USERNAME=daniel
          DB_PASSWORD=daniel
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          MEMCACHED_HOST=127.0.0.1
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true

    - name: Setting routes
      blockinfile:
        path: /var/www/danielapp/routes/web.php
        block: |
          Route::get('/', function () {
            return view('welcome');
          });

    - name: Set ownership for danielapp
      shell: chown -R root:root /var/www/danielapp
    - name: change permission for danielapp
      shell: chmod -R 755 /var/www/danielapp
    - name: Change permission for storage
      shell: chmod -R 755 /var/www/danielapp/storage
    - name: change permission for bootsrap
      shell: chmod -R 755 /var/www/danielapp/bootstrap/cache

    - name: Set .htaccess
      copy:
        dest: "/var/www/danielapp/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>

    - name: Downloading composer
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - name: Installing composer
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b>

    - name: Installing composer setup
      shell: php composer-setup.php

    - name: Composer
      shell: php -r "unlink('composer-setup.php');"

    - name: moving composer file
      shell: mv composer.phar /usr/local/bin/composer

    - name: Creating a project
      shell: cd /var/www/danielapp && composer create-project -n

    - name: Seeding database
      shell: cd /var/www/danielapp && php artisan migrate:fresh --seed && php artisan key:generate
    - name: Setup Virtualhost
      copy:
        dest: "/etc/apache2/sites-available/danielapp.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin email@domainname
              ServerName 3.86.248.85
              ServerAlias 3.86.248.85
              DocumentRoot /var/www/danielapp/public
              <Directory /var/www/danielapp/public>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>

    - name: enable a2dissite
      shell: a2dissite 000-default.conf

    - name: enable a2ensite
      shell: a2ensite danielapp.conf

    - name: enable a2enmod rewrite
      shell: a2enmod rewrite

    - name: restart apache2
      service:
        name: apache2
        state: restarted

    - name: grabting permission
      shell: chown -R www-data:www-data /var/www/danielapp

    - name: playbook to install postgress
      copy:
        src: /home/vagrant/psql.sh
        dest: /root/psql.sh
        owner: root
        group: root
        mode: "0775"

    - name: installing pqsl
      script: /home/vagrant/psql.sh

    - name: Setting ssl
      apt:
        name:
          - snapd

    - name: Installing core
      shell: snap install core
        snap refresh core
        install classic certbot
        snap install --classic certbot
        ln -s /snap/bin/certbot /usr/bin/certbot

    - name: Confirm
      shell: yes | certbot --apache --agree-tos --redirect -m email@domain.com -d capitalapps.me
